{"ast":null,"code":"const ExplorerService = {\n  getWeather: async place => {\n    try {\n      const response = await fetch(`${api.base}weather?q=${place}&units=metric&APPID=${api.key}`);\n      if (!response.ok) {\n        throw new Error(`Request failed with status: ${response.status}`);\n      }\n      return response.json();\n    } catch (error) {\n      throw new Error(`Error fetching weather data: ${error.message}`);\n    }\n  },\n  getPlaceData: async place => {\n    try {\n      const response = await fetch(`https://nijin-server.vercel.app/api/explorer/places/${place}`);\n      if (!response.ok) {\n        throw new Error(`Request failed with status: ${response.status}`);\n      }\n      return response.json();\n    } catch (error) {\n      throw new Error(`Error fetching place data: ${error.message}`);\n    }\n  },\n  getRelatedPlaces: async relatedPlaces => {\n    try {\n      const fetchRequests = relatedPlaces.map(relatedPlaceName => fetch(`https://nijin-server.vercel.app/api/explorer/places/${relatedPlaceName}`).then(res => res.json()));\n      return Promise.all(fetchRequests);\n    } catch (error) {\n      throw new Error(`Error fetching related places: ${error.message}`);\n    }\n  }\n};\nexport default ExplorerService;","map":{"version":3,"names":["ExplorerService","getWeather","place","response","fetch","api","base","key","ok","Error","status","json","error","message","getPlaceData","getRelatedPlaces","relatedPlaces","fetchRequests","map","relatedPlaceName","then","res","Promise","all"],"sources":["/Users/pavithra/Desktop/React-Enablement/Explorer/assignment-2/src/services/ExplorerService.js"],"sourcesContent":["\n\n  \n  \n  const ExplorerService = {\n    getWeather: async (place) => {\n      try {\n        const response = await fetch(`${api.base}weather?q=${place}&units=metric&APPID=${api.key}`);\n        if (!response.ok) {\n          throw new Error(`Request failed with status: ${response.status}`);\n        }\n        return response.json();\n      } catch (error) {\n        throw new Error(`Error fetching weather data: ${error.message}`);\n      }\n    },\n  \n    getPlaceData: async (place) => {\n      try {\n        const response = await fetch(`https://nijin-server.vercel.app/api/explorer/places/${place}`);\n        if (!response.ok) {\n          throw new Error(`Request failed with status: ${response.status}`);\n        }\n        return response.json();\n      } catch (error) {\n        throw new Error(`Error fetching place data: ${error.message}`);\n      }\n    },\n  \n    getRelatedPlaces: async (relatedPlaces) => {\n      try {\n        const fetchRequests = relatedPlaces.map(\n          (relatedPlaceName) =>\n            fetch(`https://nijin-server.vercel.app/api/explorer/places/${relatedPlaceName}`).then((res) => res.json())\n        );\n  \n        return Promise.all(fetchRequests);\n      } catch (error) {\n        throw new Error(`Error fetching related places: ${error.message}`);\n      }\n    },\n  };\n  \n  export default ExplorerService;\n  "],"mappings":"AAIE,MAAMA,eAAe,GAAG;EACtBC,UAAU,EAAE,MAAOC,KAAK,IAAK;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,GAAG,CAACC,IAAK,aAAYJ,KAAM,uBAAsBG,GAAG,CAACE,GAAI,EAAC,CAAC;MAC3F,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,+BAA8BN,QAAQ,CAACO,MAAO,EAAC,CAAC;MACnE;MACA,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIH,KAAK,CAAE,gCAA+BG,KAAK,CAACC,OAAQ,EAAC,CAAC;IAClE;EACF,CAAC;EAEDC,YAAY,EAAE,MAAOZ,KAAK,IAAK;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDF,KAAM,EAAC,CAAC;MAC5F,IAAI,CAACC,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,+BAA8BN,QAAQ,CAACO,MAAO,EAAC,CAAC;MACnE;MACA,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIH,KAAK,CAAE,8BAA6BG,KAAK,CAACC,OAAQ,EAAC,CAAC;IAChE;EACF,CAAC;EAEDE,gBAAgB,EAAE,MAAOC,aAAa,IAAK;IACzC,IAAI;MACF,MAAMC,aAAa,GAAGD,aAAa,CAACE,GAAG,CACpCC,gBAAgB,IACff,KAAK,CAAE,uDAAsDe,gBAAiB,EAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACV,IAAI,CAAC,CAAC,CAC7G,CAAC;MAED,OAAOW,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;IACnC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,MAAM,IAAIH,KAAK,CAAE,kCAAiCG,KAAK,CAACC,OAAQ,EAAC,CAAC;IACpE;EACF;AACF,CAAC;AAED,eAAeb,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}