{"ast":null,"code":"const api = {\n  key: \"c43e8df78d7b635d66c3c8c48a047e0d\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nconst ExplorerService = {\n  getWeather: async place => {\n    try {\n      const response = await fetch(`${api.base}weather?q=${place}&units=metric&APPID=${api.key}`);\n      return response.json();\n    } catch (error) {\n      throw new Error(`Error fetching weather data: ${error.message}`);\n    }\n  },\n  getPlaceData: async place => {\n    try {\n      const response = await fetch(`https://nijin-server.vercel.app/api/explorer/places/${place}`);\n      return response.json();\n    } catch (error) {\n      throw new Error(`Error fetching place data: ${error.message}`);\n    }\n  },\n  getRelatedPlaces: async relatedPlaces => {\n    try {\n      const fetchRequests = relatedPlaces.map(relatedPlaceName => fetch(`https://nijin-server.vercel.app/api/explorer/places/${relatedPlaceName}`).then(res => res.json()));\n      return Promise.all(fetchRequests);\n    } catch (error) {\n      throw new Error(`Error fetching related places: ${error.message}`);\n    }\n  }\n};\nexport default ExplorerService;","map":{"version":3,"names":["api","key","base","ExplorerService","getWeather","place","response","fetch","json","error","Error","message","getPlaceData","getRelatedPlaces","relatedPlaces","fetchRequests","map","relatedPlaceName","then","res","Promise","all"],"sources":["/Users/pavithra/Desktop/React-Enablement/Explorer/assignment-2/src/services/ExplorerService.js"],"sourcesContent":["\n\nconst api = {\n    key: \"c43e8df78d7b635d66c3c8c48a047e0d\",\n    base: \"https://api.openweathermap.org/data/2.5/\",\n  };\n  \n  \n  const ExplorerService = {\n    getWeather: async (place) => {\n      try {\n        const response = await fetch(`${api.base}weather?q=${place}&units=metric&APPID=${api.key}`);\n        return response.json();\n      } catch (error) {\n        throw new Error(`Error fetching weather data: ${error.message}`);\n      }\n    },\n  \n    getPlaceData: async (place) => {\n      try {\n        const response = await fetch(`https://nijin-server.vercel.app/api/explorer/places/${place}`);\n        return response.json();\n      } catch (error) {\n        throw new Error(`Error fetching place data: ${error.message}`);\n      }\n    },\n  \n    getRelatedPlaces: async (relatedPlaces) => {\n      try {\n        const fetchRequests = relatedPlaces.map(\n          (relatedPlaceName) =>\n            fetch(`https://nijin-server.vercel.app/api/explorer/places/${relatedPlaceName}`).then((res) => res.json())\n        );\n  \n        return Promise.all(fetchRequests);\n      } catch (error) {\n        throw new Error(`Error fetching related places: ${error.message}`);\n      }\n    },\n  };\n  \n  export default ExplorerService;\n  "],"mappings":"AAEA,MAAMA,GAAG,GAAG;EACRC,GAAG,EAAE,kCAAkC;EACvCC,IAAI,EAAE;AACR,CAAC;AAGD,MAAMC,eAAe,GAAG;EACtBC,UAAU,EAAE,MAAOC,KAAK,IAAK;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,GAAG,CAACE,IAAK,aAAYG,KAAM,uBAAsBL,GAAG,CAACC,GAAI,EAAC,CAAC;MAC3F,OAAOK,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,gCAA+BD,KAAK,CAACE,OAAQ,EAAC,CAAC;IAClE;EACF,CAAC;EAEDC,YAAY,EAAE,MAAOP,KAAK,IAAK;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDF,KAAM,EAAC,CAAC;MAC5F,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,8BAA6BD,KAAK,CAACE,OAAQ,EAAC,CAAC;IAChE;EACF,CAAC;EAEDE,gBAAgB,EAAE,MAAOC,aAAa,IAAK;IACzC,IAAI;MACF,MAAMC,aAAa,GAAGD,aAAa,CAACE,GAAG,CACpCC,gBAAgB,IACfV,KAAK,CAAE,uDAAsDU,gBAAiB,EAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACX,IAAI,CAAC,CAAC,CAC7G,CAAC;MAED,OAAOY,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;IACnC,CAAC,CAAC,OAAON,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,kCAAiCD,KAAK,CAACE,OAAQ,EAAC,CAAC;IACpE;EACF;AACF,CAAC;AAED,eAAeR,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}